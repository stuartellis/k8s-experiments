# SPDX-FileCopyrightText: 2025-present Stuart Ellis <stuart@stuartellis.name>
#
# SPDX-License-Identifier: MIT
#
# Configuration for Python project

[project]
name = "k8s-experiments"
version = "0.1.0"
description = "Kubernetes experiments"
readme = "README.md"
requires-python = ">=3.13"

[project.urls]
Documentation = "https://github.com/stuartellis/k8s-experiments#readme"
Issues = "https://github.com/stuartellis/k8s-experiments/issues"
Source = "https://github.com/stuartellis/k8s-experiments"

[tool.mypy]
disallow_untyped_defs = true
follow_imports = "normal"
pretty = true
show_column_numbers = true
warn_no_return = false
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
addopts = "--cov=. --cov-report term"
testpaths = ["tests"]

[tool.ruff]
src = ["src", "tests"]
target-version = "py313"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["ALL"]

# Disable rules for compatibility with ruff formatter:
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
  "COM812", "COM819",
  "D206", "D300",
  "E111", "E114", "E117",
  "ISC001", "ISC002",
  "Q000", "Q001", "Q002", "Q003",
  "W191"
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.per-file-ignores]
"./tests/**/test_*.py" = [
    # INP001 requires an __init__.py file for packages
    "INP001",
    # S101 forbids assert()
    "S101",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"

[tool.uv.pip]
generate-hashes = true

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]
allowed_tags = [
  "feat",
  "fix",
  "perf",
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
